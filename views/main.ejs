<!DOCTYPE html>
<html>
  <head>
    <title>Socket.IO - trybe</title>
  </head>
  <body>
    <ul id="users">
    </ul>
    <input name="nickname" id="nickname" data-testid="nickname-box" />
    <button id="nickname-button" data-testid="nickname-button" type="button">
      Alterar Nome
    </button>
    <input
      data-testid="message-box"
      name="chatMessage"
      id="chatMessage"
    ></input>
    <button type="button" id="send-button" data-testid="send-button">
      enviar
    </button>

    <div>
      <ul id="messages">
        <% if(messages) { %>
          <% messages.forEach((message) => { %> 
          <li data-testid="message">
            <%= `${message.timeStamps} - ${message.nickname}: ${message.message}`%>
          </li>
        <%})%>
        <% } %> 
      </ul>
    </div>

    <script src="/socket.io/socket.io.js"></script>

    <script>
      const socket = io();
      //Fields
      const users = document.getElementById('users');
      // const onlineUser = document.getElementById('online-user');
      const chatMessage = document.getElementById('chatMessage');
      const nickname = document.getElementById('nickname');
      // Buttons
      const nicknameButton = document.getElementById('nickname-button');
      const sendMessageButton = document.getElementById('send-button');

      
      nicknameButton.addEventListener('click', (e) => {
        e.preventDefault();
        sessionStorage.setItem('nickname', nickname.value);
        socket.emit('updateNickname', nickname.value);
      });
      
      socket.on('connected', (id) => {
        const sessionNickname = sessionStorage.getItem('nickname') || id;
        // onlineUser.innerText = id;
        socket.emit('updateNickname', sessionNickname)
      });

      socket.on('updateUsersList', (userList) => {
        users.textContent = '';
        const userIndex = userList.findIndex(user => user.id === socket.id);
        generateUserList(userList[userIndex].nickname);
        userList.forEach((user, index) => index !== userIndex && generateUserList(user.nickname));
      })
      
      
      sendMessageButton.addEventListener('click', (e) => {
        socket.emit('message', {
          nickname: nickname.value,
          chatMessage: chatMessage.value,
        });
        document.getElementById('chatMessage').value = '';
      });

      const createMessage = (message) => {
        const messagesUl = document.querySelector('#messages');
        const li = document.createElement('li');
        li.innerText = message;
        li.setAttribute('data-testid', 'message');
        messagesUl.appendChild(li);
      };
      socket.on('message', (message) => createMessage(message));

      const generateUserList = (userData) => {
        const user = document.createElement('li')
        user.innerHTML = userData;
        user.setAttribute('data-testid', 'online-user');
        users.appendChild(user)
      }
    </script>
  </body>
</html>
