<!DOCTYPE html>
<html>
  <head>
    <script src="http://localhost:3000/socket.io/socket.io.js"></script>
  </head>
  <body>
    <h1>Projeto Webchat</h1>


    <h2>Usu√°rios Conectados</h2>
    <ul id='nicknames'></ul>
    <form id="nickname-form">
      <input id='nickname-input' placeholder="Insira seu nickname" data-testid="nickname-box">
      <button type='submit' data-testid="nickname-button">Salvar</button>
    </form>


    <h2>Chat</h2>
    <ul id="chat"></ul>
    <form id="chat-form">
      <input id='chat-input' type="text" placeholder="Digite uma nova mensagem aqui" data-testid="message-box">
      <button type="submit" data-testid="send-button">Enviar</button>
    </form>
      
    <script>
      const socket = io("http://localhost:3000");

      const chatForm = document.querySelector('#chat-form');
      const chatInput = document.querySelector('#chat-input');

      // Req 1
      chatForm.addEventListener('submit', (event) => {
        event.preventDefault();

        const chatMessage = chatInput.value;

        socket.emit('message', {
          chatMessage,
          nickname: sessionStorage.nickname,
        });

        chatInput.value = '';
      });

      socket.on('message', (msg) => {
        const li = document.createElement("li");
        li.setAttribute('data-testid', 'message');
        li.textContent = msg;
        document.querySelector('#chat').appendChild(li);   
      });
      
      // Req 2
      const ulUsersConnected = document.querySelector('#nicknames');

      socket.on('connection', (id) => {
        const li2 = document.createElement("li");
        li2.setAttribute('data-testid', 'online-user');
        li2.setAttribute('id', 'current-nickname');
        li2.innerText = id;
        ulUsersConnected.appendChild(li2);
      });

      socket.on('usersConected', (users) => {
        // console.log('users', users);
        const lastUser = users[users.length - 1];
        sessionStorage.setItem('nickname', lastUser);

        const li2 = document.createElement("li");
        li2.setAttribute('data-testid', 'online-user');
        li2.setAttribute('id', 'current-nickname');
        li2.innerText = lastUser;
        ulUsersConnected.appendChild(li2);

        for (let index = 0; index < users.length - 1; index += 1) {
          const li2 = document.createElement("li");
          li2.setAttribute('data-testid', 'online-user');
          li2.setAttribute('id', 'current-nickname');
          li2.innerText = users[index];
          ulUsersConnected.appendChild(li2);
        }
      });

      // Req 2 update nickname
      const nicknameForm = document.querySelector('#nickname-form');
      const nicknameInput = document.querySelector('#nickname-input');

      nicknameForm.addEventListener('submit', (e) => {
        e.preventDefault();

        const newNickname = nicknameInput.value;
        const getUsername = document.querySelector('#current-nickname');

        getUsername.innerText = newNickname;

        socket.emit('updateNickname', {
          oldNickname: sessionStorage.nickname,
          newNickname,
        });

        sessionStorage.setItem('nickname', newNickname);
        nicknameInput.value = '';
      });

      socket.on('updateUsers', (oldNickname, newNickname) => {
        const getUsernames = document.querySelectorAll('#current-nickname');
        
        getUsernames.forEach((username) => {
          if(username.innerText === oldNickname) {
            username.innerText = newNickname;
          }
        });        
      });

      socket.on('logout', (id) => {
        const onlineUSers = document.querySelectorAll('#current-nickname');
        

        onlineUSers.forEach((username) => {
          if(username.innerText === id) {
            username.remove();
          }
        });
      });

    </script>
  </body>
</html>