<!DOCTYPE html>
<html>
  <head>
    <!-- <link rel="stylesheet" href="style.css"> -->
    <script src="http://localhost:3000/socket.io/socket.io.js"></script>
    <style>
      body {
        background-color:cadetblue;
      }

      #page-title {
        text-align: center;
        background-color:limegreen;
        border: 1px solid black;
        border-radius: 8px;
        font-family:Verdana, Geneva, Tahoma, sans-serif;
        font-style: italic;
        padding: 15px;
      }

      #nickname-input {
        border: none;
        padding: 5px 1rem;
        flex-grow: 1;
        border-radius: 2rem;
        margin: 0.25rem;
      }

      #nickname-button {
        background: #333;
        border: none;
        padding: 3px 1rem;
        margin: 0.25rem;
        margin-left: 2px;
        border-radius: 3px;
        outline: none;
        color: #fff;
      }

      #nickname-button:hover {
        background-color:lime;
        color: black;
        border: 1px solid black;
      }

      #chat-form {
        background: rgba(0, 0, 0, 0.15);
        padding: 0.25rem;
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        display: flex;
        height: 3rem;
        box-sizing: border-box;
        backdrop-filter: blur(10px);
      }

      #chat-input {
        border: none;
        padding: 0 1rem;
        flex-grow: 1;
        border-radius: 2rem;
        margin: 0.25rem;
      }

      #chat-input:focus {
        outline: none;
      }

      #chat-form>button {
        background: #333;
        border: none;
        padding: 0 1rem;
        margin: 0.25rem;
        margin-left: 10px;
        border-radius: 3px;
        outline: none;
        color: #fff;
      }

      #chat {
        list-style-type: none;
        margin: 0;
        padding: 0;
      }

      #chat>li {
        padding: 0.5rem 1rem;
      }

      #chat>li:nth-child(odd) {
        background-color: bisque;
        border: 2px solid black;
      }

      #chat>li:nth-child(even) {
        background-color:skyblue;
        border: 2px solid black;
      }

    </style>
  </head>
  <body>
    <h1 id="page-title">Projeto Webchat</h1>

    <h2>Usu√°rios Conectados</h2>
    <ul id='nicknames'></ul>
    <form id="nickname-form">
      <input id='nickname-input' placeholder="Insira seu nickname" data-testid="nickname-box">
      <button type='submit' id='nickname-button' data-testid="nickname-button">Salvar</button>
    </form>


    <h2>Chat</h2>
    <ul id="chat"></ul>
    <form id="chat-form">
      <input id='chat-input' type="text" placeholder="Digite uma nova mensagem aqui" data-testid="message-box">
      <button type="submit" data-testid="send-button">Enviar</button>
    </form>    
      
    <script>
      const socket = io("http://localhost:3000");

      const chatForm = document.querySelector('#chat-form');
      const chatInput = document.querySelector('#chat-input');

      // Req 1
      chatForm.addEventListener('submit', (event) => {
        event.preventDefault();

        const chatMessage = chatInput.value;

        socket.emit('message', {
          chatMessage,
          nickname: sessionStorage.nickname,
        });

        chatInput.value = '';
      });

      socket.on('message', (msg) => {
        const li = document.createElement("li");
        li.setAttribute('data-testid', 'message');
        li.textContent = msg;
        document.querySelector('#chat').appendChild(li);  
        window.scrollTo(0, document.body.scrollHeight); 
      });
      
      // Req 2
      const ulUsersConnected = document.querySelector('#nicknames');

      socket.on('connection', (id) => {
        const li2 = document.createElement("li");
        li2.setAttribute('data-testid', 'online-user');
        li2.setAttribute('id', 'current-nickname');
        li2.innerText = id;
        ulUsersConnected.appendChild(li2);
      });

      socket.on('usersConected', (users) => {
        const lastUser = users[users.length - 1];
        sessionStorage.setItem('nickname', lastUser);

        const li2 = document.createElement("li");
        li2.setAttribute('data-testid', 'online-user');
        li2.setAttribute('id', 'current-nickname');
        li2.innerText = lastUser;
        ulUsersConnected.appendChild(li2);

        for (let index = 0; index < users.length - 1; index += 1) {
          const li2 = document.createElement("li");
          li2.setAttribute('data-testid', 'online-user');
          li2.setAttribute('id', 'current-nickname');
          li2.innerText = users[index];
          ulUsersConnected.appendChild(li2);
        }
      });

      // Req 2 update nickname - ajuda do colega Rodolfo Rezende
      const nicknameForm = document.querySelector('#nickname-form');
      const nicknameInput = document.querySelector('#nickname-input');

      nicknameForm.addEventListener('submit', (e) => {
        e.preventDefault();

        const newNickname = nicknameInput.value;
        const getUsername = document.querySelector('#current-nickname');

        getUsername.innerText = newNickname;

        socket.emit('updateNickname', {
          oldNickname: sessionStorage.nickname,
          newNickname,
        });

        sessionStorage.setItem('nickname', newNickname);
        nicknameInput.value = '';
      });

      socket.on('updateUsers', (oldNickname, newNickname) => {
        const getUsernames = document.querySelectorAll('#current-nickname');
        
        getUsernames.forEach((username) => {
          if(username.innerText === oldNickname) {
            username.innerText = newNickname;
          }
        });        
      });

      socket.on('logout', (id) => {
        const onlineUSers = document.querySelectorAll('#current-nickname');

        onlineUSers.forEach((username) => {
          if(username.innerText === id) {
            username.remove();
          }
        });
      });

      const fetchWebchat = async () => {
        const result = await fetch('http://localhost:3000/webchat');
        const response = await result.json();
        for (let index = 0; index < response.length; index += 1) {
          const li = document.createElement("li");
          li.setAttribute('data-testid', 'message');
          li.textContent = `${response[index].timestamp} - ${response[index].nickname}: ${response[index].message}`;
          document.querySelector('#chat').appendChild(li);        
        }
      };
      fetchWebchat();

    </script>
  </body>
</html>