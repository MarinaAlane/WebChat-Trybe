<!DOCTYPE html>

<head>
  <title>WEB CHAT</title>
  <script src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.4/socket.io.js'></script>
</head>

<body>
  <div id="users-container"></div>

  <form id="nickname-send">
    <input id="nickname-input" autocomplete="off" data-testid="nickname-box" />
    <button data-testid="nickname-button" type="submit">Send nickname</button>
  </form>

  <div id="messages-container">
    <% messages.forEach((msg) => { %>
      <div data-testid="message">
        <%= `${msg.timestamp} - ${msg.nickname}: ${msg.message}` %>
      </div>
    <% }) %>
  </div>

  <form id="message-send">
    <input id="message-input" autocomplete="off" data-testid="message-box" />
    <button data-testid="send-button" type="submit">Send</button>
  </form>

  <script>
    const socket = io();
    const messageForm = document.querySelector('#message-send');
    const nicknameForm = document.querySelector('#nickname-send');
    const messageInput = document.querySelector('#message-input');
    const nicknameInput = document.querySelector('#nickname-input');
    const messagesContainer = document.querySelector('#messages-container');
    const usersContainer = document.querySelector('#users-container');
    let users = [];

    messageForm.addEventListener('submit', (e) => {
      e.preventDefault();
      const chatMessage = messageInput.value;
      const userId = socket.id;
      const { nickname } = users.find((user) => user.id === userId);
      socket.emit('message', { chatMessage, nickname });
      messageInput.value = '';
    })

    nicknameForm.addEventListener('submit', (e) => {
      e.preventDefault();
      const name = nicknameInput.value;
      if (name) {
        const newNickname = {
          id: socket.id,
          nickname: name
        }
        socket.emit('newNickname', newNickname);
      }
      nicknameInput.value = '';
    })

    const createMessage = (message) => {
      const messageElement = document.createElement('div'); 

      messageElement.innerText = message;
      messageElement.setAttribute('data-testid', 'message');
      messagesContainer.append(messageElement);
    }

    const onlineUsers = (arrayUsers) => {
      usersContainer.textContent = '';
      users = [...arrayUsers];
      users.sort();
      users.reverse();
      users.forEach((user) => {
        const userElement = document.createElement('div');
        onlineUser = user.nickname;
        userElement.innerText = user.nickname;
        userElement.setAttribute('data-testid', 'online-user');
        userElement.setAttribute('userId', user.id);
        usersContainer.append(userElement)
      })
    }

    socket.on('online-user', (arrayUsers) => onlineUsers(arrayUsers));
    socket.on('message', (message) => createMessage(message));

    window.onbeforeunload = () => {
      socket.disconnect();
    };
  </script>

</body>

</html>
