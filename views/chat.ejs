<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>WEBCHAT</title>
</head>
<body>
  <h1>WEBCHAT T11</h1>
  <div>
    <h2>Bem vindo <span id="current-user" data-testid="online-user"></span></h2>
    <h3>Usu√°rios Online</h3>
    <ul id="online-list"></ul>
  </div>

  <!-- <ul id="messages" data-testid="message-box"></ul> -->

  <div>
    <h3>Mensagens</h3>
    <ul id="messages">
      <% messages.forEach(({nickname, message, timestamp}) => { %>
        <li data-testid="message"><%= `${timestamp} - ${nickname}: ${message}` %></li>
      <%})%>
    </ul>
  </div>

  <form id="nickname-container">
    <input id="nickname" autocomplete="on" data-testid="nickname-box"/>
    <button data-testid="nickname-button">Alterar nome</button>
  </form>
  
    <form id="message-container" action="">
      <input id="input" autocomplete="off" data-testid="message-box"/>
      <button data-testid="send-button">Enviar mensagem</button>
    </form>
  
  <script src="/socket.io/socket.io.js"></script>

  <script>
    const socket = io();
    let user = ''
    window.onload = () => {
    user = (Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)).substring(0, 16);
    // https://gist.github.com/6174/6062387
    document.getElementById('current-user').innerText = '';
    document.getElementById('current-user').innerText = user;
    socket.emit('new-user', user); 
    //envia o novo usuario conectado para o servidor
    }
    
    // const form = document.getElementById('form');
    const messageContainer = document.getElementById('message-container');
    const input = document.getElementById('input');
    const nickname = document.getElementById('nickname');
    const buttonNickname = document.getElementById('nickname-button');
    const containerNickname = document.getElementById('nickname-container');

    containerNickname.addEventListener('submit', (e) => {
      e.preventDefault();
      user = nickname.value;
      document.getElementById('current-user').innerText = '';
      document.getElementById('current-user').innerText = user;
      console.log(user)
      socket.emit('edit-user', user);
    });

    messageContainer.addEventListener('submit', (e) => {
      e.preventDefault();
      if (input.value && user) {
        // de acordo com o requisito 1
        socket.emit('message', {chatMessage: input.value, nickname: user}); 
        input.value = '';
      }
    });

    socket.on('message', (message) => {
      const messages = document.getElementById('messages');
      const li = document.createElement('li');
      li.setAttribute('data-testid', 'message');
      li.innerText = message;
      messages.appendChild(li);
    });

    socket.on('online', (onlineList) => {
      const ul = document.getElementById('online-list');
      while (ul.childNodes.length > 0) {
        ul.removeChild(ul.lastChild);
      }
      const indexUser = onlineList.findIndex((item) => item.nickname === user);
      onlineList.splice(indexUser, 1);
      onlineList.forEach((user) => {
        const li = document.createElement('li');
        li.setAttribute('data-testid', 'online-user');
        li.innerText = user.nickname;
        ul.appendChild(li);
      })
    });
  </script>
</body>
</html>